#!/usr/bin/env python

import sys

import numpy as np
import pylab

from seisflows.tools.array import uniquerows


def isnonzero(a):
    zmin = np.min(a, axis=0)
    zmax = np.max(a, axis=0)
    return np.flatnonzero(zmax-zmin)


def meshplot(x, y, z):
    """ Plots values on 2D unstructured mesh
    """
    import pylab

    r = (max(x) - min(x))/(max(y) - min(y))
    rx = r/np.sqrt(1 + r**2)
    ry = 1/np.sqrt(1 + r**2)

    f = pylab.figure(figsize=(10*rx, 10*ry))
    p = pylab.tricontourf(x, y, z, 125)
    pylab.axis('image')
    return f, p


if __name__ == '__main__':
    """ Plots data on 2-D unstructured mesh

    Reads mesh coordinates from first two columns of text file and data from
    subsequent columns, computes Delaunay triangulation, and plots data
    using matplotlib.

    In particular, can be used to plot kernels and models output from SPECFEM2D
    on unstructured GLL bases.
    """
    filename = sys.argv[1]

    fromfile = np.loadtxt(filename)
    nr, nc = fromfile.shape

    if nc == 5:
        data = fromfile
    elif nc == 6:
        data = np.copy(fromfile[:, 1:])

    xy = data[:, 0:2]
    _, indices = uniquerows(xy, False, True)
    u = data[indices]

    x = u[:, 0]
    y = u[:, 1]
    Z = u[:, 2:]

    for i in isnonzero(Z):
        z = np.squeeze(Z[:, i])
        print 'min, max:', min(z), max(z)
        _, p = meshplot(x, y, z)
        pylab.show()


